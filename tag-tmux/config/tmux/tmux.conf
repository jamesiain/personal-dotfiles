set -g default-terminal "screen-256color"
set -as terminal-overrides ',*:RGB' # RGB color support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# act like vim
setw -g mode-keys vi
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

set -g prefix2 C-s
set -sg escape-time 1

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# soften status bar color from harsh green to light gray
set -g status-style bg='#666666',fg='#aaaaaa'
# set -g status-position top

# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right ''

# increase scrollback lines
set -g history-limit 10000

# prefix -> back-one-character
bind-key C-b send-prefix
# prefix-2 -> forward-incremental-history-search
bind-key C-s send-prefix -2

# don't suspend-client
unbind-key C-z

# skip "kill-pane 1? (y/n)" prompt
bind-key x kill-pane

# don't exit from tmux when closing a session
set -g detach-on-destroy off

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Edit and copy on the command-line, as in Vim
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

unbind-key -T copy-mode-vi Space
unbind-key -T copy-mode-vi Enter
unbind-key -T copy-mode-vi C-v
unbind-key -T copy-mode-vi [
unbind-key -T copy-mode-vi ]

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi [ send-keys -X begin-selection
bind-key -T copy-mode-vi ] send-keys -X copy-selection

# set window notifications
setw -g monitor-activity on
set -g visual-activity on

# resize panes
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5

# auto-name my windows!
setw -g automatic-rename on
set -g automatic-rename-format "#{pane_current_command}"

# choose tree command for switching between sessions
bind-key C-j choose-tree

#### COLOUR (Solarized 256)

# status bar
set-option -g status-style fg=colour136,bg=colour235,default

# window title
set-window-option -g window-status-style fg=colour244,bg=default,dim
set-window-option -g window-status-current-style fg=colour166,bg=default,bright

# pane border
set-option -g pane-border-style fg=colour235
set-option -g pane-active-border-style fg=colour240
set-option -g pane-border-status bottom
set-option -g pane-border-format ''

# message text
set-option -g message-style fg=colour166,bg=colour235

# pane number display
set-option -g display-panes-active-colour colour33
set-option -g display-panes-colour colour166

# clock
set-window-option -g clock-mode-colour colour64

# bell
set-window-option -g window-status-bell-style fg=colour235,bg=colour160

# Tmux Package Manager

# List of plugins
set -g @plugin 'tmux-plugins/tpm '
set -g @plugin 'tmux-plugins/tmux-sensible '
set -g @plugin 'tmux-plugins/tmux-prefix-highlight '
set -g @plugin 'tmux-plugins/tmux-pain-control '
set -g @plugin 'tmux-plugins/tmux-resurrect '
set -g @plugin 'tmux-plugins/tmux-sessionist '
set -g @plugin 'tmux-plugins/tmux-logging '
set -g @plugin 'tmux-plugins/tmux-battery '
set -g @plugin 'tmux-plugins/tmux-open '
set -g @plugin 'joshmedeski/t-smart-tmux-session-manager'
set -g @plugin 'olimorris/tmux-pomodoro-plus '
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'niqodea/tmux-nested'

# show <prefix>, copy-mode or sync-mode activity in bottom right corner
set -g status-left '#{prefix_highlight} '
set -g @prefix_highlight_empty_prompt '      '
set -g @prefix_highlight_empty_attr 'fg=default,bg=default'
set -g @prefix_highlight_prefix_prompt 'WAIT'
set -g @prefix_highlight_prefix_attr 'fg=white,bg=blue'
set -g @prefix_highlight_copy_prompt 'COPY'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold'
set -g @prefix_highlight_sync_prompt 'SYNC'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_sync_mode_attr 'fg=black,bg=green'

# pomodoro
set -g @pomodoro_notifications 'on'
set -g @pomodoro_sounds 'on'

# show pomodoro, battery status, date/time, and TMUX session name in bottom right corner
set -g status-right '#{pomodoro_status}#{battery_color_bg} #{battery_icon} #{battery_percentage} #{battery_remain} #[bg=cyan] %a %h-%d %H:%M:%S #[fg=black,bg=colour208] #S '
set -g status-right-length 0  # 0: allow length to extend without limit
set -g status-interval 1      # 1: update status bar after one second

# restore Vim & NeoVim sessions, if Session.vim file is present
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'

# swap the default key bindings for tmux-open
set -g @open 'C-o'
set -g @open-editor 'o'

# tmux-nested options
set -g @nested_down_keybind 'M-d'
set -g @nested_up_keybind 'M-u'
set -g @nested_up_recursive_keybind 'M-U'

# Automatically install and enable TMUX plugin manager on new installations
setenv -g TMUX_PLUGIN_MANAGER_PATH "$XDG_DATA_HOME/tmux/plugins"

if-shell "[ ! -d $TMUX_PLUGIN_MANAGER_PATH/tpm ]" \
  'run "mkdir -p $TMUX_PLUGIN_MANAGER_PATH && git clone https://github.com/tmux-plugins/tpm $TMUX_PLUGIN_MANAGER_PATH/tpm && $TMUX_PLUGIN_MANAGER_PATH/tpm/bin/install_plugins"'

# Start the TMUX Plugin Manager (keep this line at the very bottom of tpm.conf)
run-shell "$TMUX_PLUGIN_MANAGER_PATH/tpm/tpm"
